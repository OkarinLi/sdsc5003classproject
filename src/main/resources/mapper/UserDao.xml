<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--定义文件与Mapper接口的对应关系-->
<mapper namespace="com.cityu.sdsc5003classproject.dao.UserDao">
    <!--配置表结构和实体类的对应关系-->
    <resultMap type="com.cityu.sdsc5003classproject.entity.User" id="UserResult">
        <result property="id" column="id"/>
        <result property="user_name" column="user_name"/>
        <result property="password" column="password"/>
        <result property="telephone" column="telephone"/>
        <result property="email" column="email"/>
        <result property="identity_card" column="identity_card"/>
    </resultMap>
    <!--针对接口方法编写具体的SQL语句-->
<!--    <select id="getAllPeople" resultMap="PeopleResult">-->
<!--        select id,name from People-->
<!--        order by id desc-->
<!--    </select>-->

    <select id="search" resultMap="UserResult" parameterType="com.cityu.sdsc5003classproject.entity.User">
        select id,user_name,telephone,email,identity_card from users where user_name=#{user_name} and password=#{password}
    </select>

    <select id="getUserById" resultMap="UserResult">
        select id,user_name,telephone,email,identity_card from users where id=#{id}
    </select>


    <insert id="insertUser" parameterType="com.cityu.sdsc5003classproject.entity.User">
        insert into users(user_name, password ,email,telephone,identity_card)
        values(#{user_name},#{password},#{email},#{telephone},#{identity_card})
    </insert>

    <update id="updateUser" parameterType="com.cityu.sdsc5003classproject.entity.User">
        update users
        set
            email=#{email},
            telephone=#{telephone},
            identity_card=#{identity_card}
        where id=#{id}
    </update>

<!--    <delete id="deleteById" parameterType="String">-->
<!--        delete from People where id=#{id}-->
<!--    </delete>-->

</mapper>

